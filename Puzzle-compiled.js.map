{"version":3,"sources":["Puzzle.js"],"names":[],"mappings":"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","file":"Puzzle-compiled.js","sourcesContent":["/**\r\n * Created by PhpStorm.\r\n * Author: Max Ulyanov\r\n * Project: 15-puzzle\r\n * Date:  09.03.2017\r\n * Time: 21:48\r\n */\r\n\r\n\r\n'use strict';\r\n\r\n\r\nconst ROW = 4;\r\nconst COLUMN = 4;\r\nconst EMPTY = 'EMPTY';\r\nconst ANIMATE_DURATION = 300;\r\n\r\n\r\nclass Puzzle {\r\n\r\n\r\n    /**\r\n     * \r\n     * @param root\r\n     * @param series\r\n     */\r\n    constructor(root, series) {\r\n        this.root = root;\r\n        this.series = series || Puzzle.generateSeries(true);\r\n        this.winSeries = Puzzle.generateSeries(false);\r\n        this.coordinatesEmptyElement = [ROW - 1, COLUMN - 1];\r\n        this.coordinatesDragElement = [0, 0];\r\n        this.dragElement = null;\r\n        this.matrix = this._createMatrix(this.series);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    render() {\r\n        this.matrix.forEach((row) => {\r\n            const container = this._createRow();\r\n            row.forEach((cell) => {\r\n                container.appendChild(cell);\r\n            });\r\n        });\r\n        this._attachEvents();\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    update() {\r\n        this.root.innerHTML = null;\r\n        this.render();\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @returns {Element}\r\n     * @private\r\n     */\r\n    _createRow() {\r\n        const row = document.createElement('div');\r\n        row.className = 'row';\r\n        this.root.appendChild(row);\r\n        return row;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param content\r\n     * @returns {Element}\r\n     * @private\r\n     */\r\n    _createElement(content) {\r\n        const element = document.createElement('div');\r\n        element.innerHTML = content;\r\n        element.className = 'cell';\r\n        return element;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _attachEvents() {\r\n        this._attachEventsEmptyElement();\r\n\r\n        // top\r\n        if(this.coordinatesEmptyElement[0] !== 0) {\r\n            this._attachEventsElement(this._getElementFromMatrix(this.coordinatesEmptyElement[0] - 1, this.coordinatesEmptyElement[1]));\r\n        }\r\n        // bottom\r\n        if(this.coordinatesEmptyElement[0] !== ROW - 1) {\r\n            this._attachEventsElement(this._getElementFromMatrix(this.coordinatesEmptyElement[0] + 1, this.coordinatesEmptyElement[1]));\r\n        }\r\n        // left\r\n        if(this.coordinatesEmptyElement[1] !== 0) {\r\n            this._attachEventsElement(this._getElementFromMatrix(this.coordinatesEmptyElement[0], this.coordinatesEmptyElement[1] - 1));\r\n        }\r\n        // right\r\n        if(this.coordinatesEmptyElement[1] !== COLUMN - 1) {\r\n            this._attachEventsElement(this._getElementFromMatrix(this.coordinatesEmptyElement[0], this.coordinatesEmptyElement[1] + 1));\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param element\r\n     * @param isEmpty\r\n     * @private\r\n     */\r\n    _attachEventsElement(element, isEmpty) {\r\n        if(!isEmpty) {\r\n            element.setAttribute('draggable', 'true');\r\n        }\r\n\r\n        const self = this;\r\n\r\n        element.addEventListener('dragover', this._handleDragOver.bind(self), false);\r\n        element.addEventListener('dragstart', this._handleDragStart.bind(self), false);\r\n        element.addEventListener('dragenter', this._handlerDragEnter.bind(self), false);\r\n        element.addEventListener('dragleave', this._handleDragLeave.bind(self), false);\r\n        element.addEventListener('dragend', this._handlerDragEnd.bind(self), false);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _attachEventsEmptyElement() {\r\n        const element = this._getElementFromMatrix(this.coordinatesEmptyElement);\r\n        const self = this;\r\n\r\n        this._attachEventsElement(element, true);\r\n        element.classList.add('is-empty');\r\n        element.addEventListener('drop', this._handleDrop.bind(self), false);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    detachEvents() {\r\n        for(let i = 0; i < this.matrix.length; i++) {\r\n            const cells = this.matrix[i];\r\n            for(let j = 0; j < cells.length; j++) {\r\n                const cell = cells[j];\r\n                cell.removeAttribute('draggable');\r\n                cell.classList.remove('is-active');\r\n                cells[j] = cell.cloneNode(true);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param row\r\n     * @param column\r\n     * @returns {*}\r\n     * @private\r\n     */\r\n    _getElementFromMatrix(row, column) {\r\n        if(Array.isArray(row)) {\r\n            return this.matrix[row[0]][row[1]];\r\n        }\r\n        return this.matrix[row][column];\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param series\r\n     * @returns {Array}\r\n     */\r\n    _createMatrix(series) {\r\n        const matrix = [];\r\n        let position = 0;\r\n        for(let i = 0; i < ROW; i++) {\r\n            matrix[i] = [];\r\n            for(let j = 0; j < COLUMN; j++) {\r\n                const element = series[position];\r\n                matrix[i].push(this._createElement(element));\r\n                if(element == EMPTY) {\r\n                    this.coordinatesEmptyElement = [i, j];\r\n                }\r\n                position++;\r\n            }\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    _checkForVictory() {\r\n        const series = [];\r\n        this.matrix.forEach((row) => {\r\n            row.forEach((cell) => {\r\n                series.push(cell.innerHTML)\r\n            });\r\n        });\r\n\r\n        return this.winSeries.join('') === series.join('');\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     * @private\r\n     */\r\n    _handleDragStart(event) {\r\n        this.dragElement = event.target;\r\n        event.dataTransfer.effectAllowed = 'move';\r\n        event.dataTransfer.setData('html', this.dragElement.innerHTML);\r\n        event.dataTransfer.setData('classes', this.dragElement.getAttribute('class'));\r\n\r\n        this.matrix.forEach((row, index) => {\r\n            const searchIndex = row.indexOf(this.dragElement);\r\n            if(searchIndex >= 0) {\r\n                this.coordinatesDragElement = [index, searchIndex];\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    _handleDragOver(event) {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     * @private\r\n     */\r\n    _handlerDragEnter(event) {\r\n        event.preventDefault();\r\n        event.target.classList.add('is-active');\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     * @private\r\n     */\r\n    _handleDragLeave(event) {\r\n        event.preventDefault();\r\n        event.target.classList.remove('is-active');\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     * @private\r\n     */\r\n    _handlerDragEnd(event) {\r\n        event.preventDefault();\r\n        this.matrix.forEach((row) => {\r\n            row.forEach((cell) => {\r\n                cell.classList.remove('is-active');\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    _handleDrop(event) {\r\n        event.stopPropagation();\r\n\r\n        const target = event.target;\r\n        if (this.dragElement != target) {\r\n            this.dragElement.innerHTML = target.innerHTML;\r\n            this.dragElement.classList.add('is-empty');\r\n            target.innerHTML = event.dataTransfer.getData('html');\r\n            target.className = event.dataTransfer.getData('classes');\r\n\r\n            this.coordinatesEmptyElement = this.coordinatesDragElement;\r\n\r\n            setTimeout(() => {\r\n                this.detachEvents();\r\n\r\n                if(this._checkForVictory()) {\r\n                    this.root.classList.add('is-win');\r\n                }\r\n                else {\r\n                    this.update();\r\n                }\r\n            }, ANIMATE_DURATION)\r\n\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param shuffle\r\n     * @returns {Array}\r\n     */\r\n    static generateSeries(shuffle) {\r\n        const cells = [];\r\n        for(let i = 1; i <= ROW * COLUMN; i++) {\r\n            ROW * COLUMN === i ? cells.push(EMPTY) : cells.push(i);\r\n        }\r\n        return shuffle ? Puzzle.shuffle(cells) : cells;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param array\r\n     * @returns {*}\r\n     */\r\n    static shuffle(array) {\r\n        let j, x, i;\r\n        for (i = array.length; i; i--) {\r\n            j = Math.floor(Math.random() * i);\r\n            x = array[i - 1];\r\n            array[i - 1] = array[j];\r\n            array[j] = x;\r\n        }\r\n        return array;\r\n    }\r\n\r\n}\r\n"]}